{
  "address": "0xE794d204C1e587940D4e99358a91E4eCa6CE6B46",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeed",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__OnlyOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVersion",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "s_addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "s_funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "transactionHash": "0xbf74f586f8d1cb7ab4632eb87eef6007fcc534a343335de0e01a24949abeeb04",
  "receipt": {
    "to": null,
    "from": "0x51fa5eBf62361E37a5Ad63dBD4B122D0d885b30C",
    "contractAddress": "0xE794d204C1e587940D4e99358a91E4eCa6CE6B46",
    "transactionIndex": 41,
    "gasUsed": "1006594",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0xdc36171eb0afc1a3c024c91b31fe2851679ed2c9ab72121c4071bed3daf49dd1",
    "transactionHash": "0xbf74f586f8d1cb7ab4632eb87eef6007fcc534a343335de0e01a24949abeeb04",
    "logs": [],
    "blockNumber": 5314898,
    "cumulativeGasUsed": "5220152",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x694AA1769357215DE4FAC081bf1f309aDC325306"
  ],
  "numDeployments": 2,
  "solcInputHash": "14e484c0c81c52a1b2b2a2f492a5bc04",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeed\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__OnlyOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"s_addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Fundme.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\"},\"contracts/Fundme.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__OnlyOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    mapping(address => uint256) public s_addressToAmountFunded;\\n    address[] public s_funders;\\n    address public s_owner;\\n    AggregatorV3Interface public s_priceFeed;\\n\\n    modifier onlyOwner() {\\n        // require(msg.sender == s_owner);\\n        if (msg.sender != s_owner) revert FundMe__OnlyOwner();\\n        _;\\n    }\\n\\n    constructor(address priceFeed) {\\n        s_priceFeed = AggregatorV3Interface(priceFeed);\\n        s_owner = msg.sender;\\n    }\\n\\n    function fund() public payable {\\n        uint256 minimumUSD = 50 * 10 ** 18;\\n        require(\\n            msg.value.getConversionRate(s_priceFeed) >= minimumUSD,\\n            \\\"You need to spend more ETH!\\\"\\n        );\\n        // require(PriceConverter.getConversionRate(msg.value) >= minimumUSD, \\\"You need to spend more ETH!\\\");\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n        s_funders.push(msg.sender);\\n    }\\n\\n    function getVersion() public view returns (uint256) {\\n        return s_priceFeed.version();\\n    }\\n\\n    function withdraw() public payable onlyOwner {\\n        payable(msg.sender).transfer(address(this).balance);\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < s_funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n    }\\n\\n    function cheaperWithdraw() public payable onlyOwner {\\n        payable(msg.sender).transfer(address(this).balance);\\n        address[] memory funders = s_funders;\\n        // mappings can't be in memory, sorry!\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n    }\\n}\\n\",\"keccak256\":\"0x1e0a0243a03c20ff86353c3e669e950207414a39cc50052759484516207463bd\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n  function getPrice(AggregatorV3Interface priceFeed)\\n    internal\\n    view\\n    returns (uint256)\\n  {\\n    (, int256 answer, , , ) = priceFeed.latestRoundData();\\n    // ETH/USD rate in 18 digit\\n    return uint256(answer * 10000000000);\\n  }\\n\\n  // 1000000000\\n  function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed)\\n    internal\\n    view\\n    returns (uint256)\\n  {\\n    uint256 ethPrice = getPrice(priceFeed);\\n    uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n    // the actual ETH/USD conversation rate, after adjusting the extra 0s.\\n    return ethAmountInUsd;\\n  }\\n}\",\"keccak256\":\"0xde33ecbc213760bd819d8825c46b267c48220a86f3f19f6353270acd310a59b5\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620011d4380380620011d483398181016040528101906200003791906200012a565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200015c565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000f282620000c5565b9050919050565b6200010481620000e5565b81146200011057600080fd5b50565b6000815190506200012481620000f9565b92915050565b600060208284031215620001435762000142620000c0565b5b6000620001538482850162000113565b91505092915050565b611068806200016c6000396000f3fe60806040526004361061007b5760003560e01c806354861af71161004e57806354861af71461011d578063b60d42881461015a578063be2693f014610164578063e39782401461016e5761007b565b80630d8e6e2c146100805780630ec3b027146100ab5780631bf6132d146100d65780633ccfd60b14610113575b600080fd5b34801561008c57600080fd5b50610095610199565b6040516100a291906109db565b60405180910390f35b3480156100b757600080fd5b506100c0610240565b6040516100cd9190610a75565b60405180910390f35b3480156100e257600080fd5b506100fd60048036038101906100f89190610ad3565b610266565b60405161010a91906109db565b60405180910390f35b61011b61027e565b005b34801561012957600080fd5b50610144600480360381019061013f9190610b2c565b61045a565b6040516101519190610b68565b60405180910390f35b610162610499565b005b61016c6105d9565b005b34801561017a57600080fd5b50610183610819565b6040516101909190610b68565b60405180910390f35b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b15801561020357600080fd5b505afa158015610217573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023b9190610b98565b905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006020528060005260406000206000915090505481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610305576040517f0bced8bc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f1935050505015801561034b573d6000803e3d6000fd5b5060005b6001805490508110156103f75760006001828154811061037257610371610bc5565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806103ef90610c23565b91505061034f565b50600067ffffffffffffffff81111561041357610412610c6c565b5b6040519080825280602002602001820160405280156104415781602001602082028036833780820191505090505b506001908051906020019061045792919061091b565b50565b6001818154811061046a57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006802b5e3af16b18800009050806104dd600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461083f90919063ffffffff16565b101561051e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051590610cf8565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461056c9190610d18565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610660576040517f0bced8bc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156106a6573d6000803e3d6000fd5b506000600180548060200260200160405190810160405280929190818152602001828054801561072b57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106e1575b5050505050905060005b81518110156107b557600082828151811061075357610752610bc5565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806107ad90610c23565b915050610735565b50600067ffffffffffffffff8111156107d1576107d0610c6c565b5b6040519080825280602002602001820160405280156107ff5781602001602082028036833780820191505090505b506001908051906020019061081592919061091b565b5050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061084b8361087b565b90506000670de0b6b3a764000085836108649190610d6e565b61086e9190610df7565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156108c457600080fd5b505afa1580156108d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108fc9190610ea0565b5050509150506402540be400816109139190610f1b565b915050919050565b828054828255906000526020600020908101928215610994579160200282015b828111156109935782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061093b565b5b5090506109a191906109a5565b5090565b5b808211156109be5760008160009055506001016109a6565b5090565b6000819050919050565b6109d5816109c2565b82525050565b60006020820190506109f060008301846109cc565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610a3b610a36610a31846109f6565b610a16565b6109f6565b9050919050565b6000610a4d82610a20565b9050919050565b6000610a5f82610a42565b9050919050565b610a6f81610a54565b82525050565b6000602082019050610a8a6000830184610a66565b92915050565b600080fd5b6000610aa0826109f6565b9050919050565b610ab081610a95565b8114610abb57600080fd5b50565b600081359050610acd81610aa7565b92915050565b600060208284031215610ae957610ae8610a90565b5b6000610af784828501610abe565b91505092915050565b610b09816109c2565b8114610b1457600080fd5b50565b600081359050610b2681610b00565b92915050565b600060208284031215610b4257610b41610a90565b5b6000610b5084828501610b17565b91505092915050565b610b6281610a95565b82525050565b6000602082019050610b7d6000830184610b59565b92915050565b600081519050610b9281610b00565b92915050565b600060208284031215610bae57610bad610a90565b5b6000610bbc84828501610b83565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c2e826109c2565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610c6157610c60610bf4565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610ce2601b83610c9b565b9150610ced82610cac565b602082019050919050565b60006020820190508181036000830152610d1181610cd5565b9050919050565b6000610d23826109c2565b9150610d2e836109c2565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d6357610d62610bf4565b5b828201905092915050565b6000610d79826109c2565b9150610d84836109c2565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610dbd57610dbc610bf4565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e02826109c2565b9150610e0d836109c2565b925082610e1d57610e1c610dc8565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610e4781610e28565b8114610e5257600080fd5b50565b600081519050610e6481610e3e565b92915050565b6000819050919050565b610e7d81610e6a565b8114610e8857600080fd5b50565b600081519050610e9a81610e74565b92915050565b600080600080600060a08688031215610ebc57610ebb610a90565b5b6000610eca88828901610e55565b9550506020610edb88828901610e8b565b9450506040610eec88828901610b83565b9350506060610efd88828901610b83565b9250506080610f0e88828901610e55565b9150509295509295909350565b6000610f2682610e6a565b9150610f3183610e6a565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610f7057610f6f610bf4565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610fad57610fac610bf4565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610fea57610fe9610bf4565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561102757611026610bf4565b5b82820290509291505056fea26469706673582212207faf3e086665addc82f6495f8f1ebd1cc80707c45a9bda26cf3031add12e008064736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061007b5760003560e01c806354861af71161004e57806354861af71461011d578063b60d42881461015a578063be2693f014610164578063e39782401461016e5761007b565b80630d8e6e2c146100805780630ec3b027146100ab5780631bf6132d146100d65780633ccfd60b14610113575b600080fd5b34801561008c57600080fd5b50610095610199565b6040516100a291906109db565b60405180910390f35b3480156100b757600080fd5b506100c0610240565b6040516100cd9190610a75565b60405180910390f35b3480156100e257600080fd5b506100fd60048036038101906100f89190610ad3565b610266565b60405161010a91906109db565b60405180910390f35b61011b61027e565b005b34801561012957600080fd5b50610144600480360381019061013f9190610b2c565b61045a565b6040516101519190610b68565b60405180910390f35b610162610499565b005b61016c6105d9565b005b34801561017a57600080fd5b50610183610819565b6040516101909190610b68565b60405180910390f35b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b15801561020357600080fd5b505afa158015610217573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023b9190610b98565b905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006020528060005260406000206000915090505481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610305576040517f0bced8bc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f1935050505015801561034b573d6000803e3d6000fd5b5060005b6001805490508110156103f75760006001828154811061037257610371610bc5565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806103ef90610c23565b91505061034f565b50600067ffffffffffffffff81111561041357610412610c6c565b5b6040519080825280602002602001820160405280156104415781602001602082028036833780820191505090505b506001908051906020019061045792919061091b565b50565b6001818154811061046a57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006802b5e3af16b18800009050806104dd600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461083f90919063ffffffff16565b101561051e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051590610cf8565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461056c9190610d18565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610660576040517f0bced8bc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156106a6573d6000803e3d6000fd5b506000600180548060200260200160405190810160405280929190818152602001828054801561072b57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106e1575b5050505050905060005b81518110156107b557600082828151811061075357610752610bc5565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806107ad90610c23565b915050610735565b50600067ffffffffffffffff8111156107d1576107d0610c6c565b5b6040519080825280602002602001820160405280156107ff5781602001602082028036833780820191505090505b506001908051906020019061081592919061091b565b5050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061084b8361087b565b90506000670de0b6b3a764000085836108649190610d6e565b61086e9190610df7565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156108c457600080fd5b505afa1580156108d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108fc9190610ea0565b5050509150506402540be400816109139190610f1b565b915050919050565b828054828255906000526020600020908101928215610994579160200282015b828111156109935782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061093b565b5b5090506109a191906109a5565b5090565b5b808211156109be5760008160009055506001016109a6565b5090565b6000819050919050565b6109d5816109c2565b82525050565b60006020820190506109f060008301846109cc565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610a3b610a36610a31846109f6565b610a16565b6109f6565b9050919050565b6000610a4d82610a20565b9050919050565b6000610a5f82610a42565b9050919050565b610a6f81610a54565b82525050565b6000602082019050610a8a6000830184610a66565b92915050565b600080fd5b6000610aa0826109f6565b9050919050565b610ab081610a95565b8114610abb57600080fd5b50565b600081359050610acd81610aa7565b92915050565b600060208284031215610ae957610ae8610a90565b5b6000610af784828501610abe565b91505092915050565b610b09816109c2565b8114610b1457600080fd5b50565b600081359050610b2681610b00565b92915050565b600060208284031215610b4257610b41610a90565b5b6000610b5084828501610b17565b91505092915050565b610b6281610a95565b82525050565b6000602082019050610b7d6000830184610b59565b92915050565b600081519050610b9281610b00565b92915050565b600060208284031215610bae57610bad610a90565b5b6000610bbc84828501610b83565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c2e826109c2565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610c6157610c60610bf4565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610ce2601b83610c9b565b9150610ced82610cac565b602082019050919050565b60006020820190508181036000830152610d1181610cd5565b9050919050565b6000610d23826109c2565b9150610d2e836109c2565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d6357610d62610bf4565b5b828201905092915050565b6000610d79826109c2565b9150610d84836109c2565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610dbd57610dbc610bf4565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e02826109c2565b9150610e0d836109c2565b925082610e1d57610e1c610dc8565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610e4781610e28565b8114610e5257600080fd5b50565b600081519050610e6481610e3e565b92915050565b6000819050919050565b610e7d81610e6a565b8114610e8857600080fd5b50565b600081519050610e9a81610e74565b92915050565b600080600080600060a08688031215610ebc57610ebb610a90565b5b6000610eca88828901610e55565b9550506020610edb88828901610e8b565b9450506040610eec88828901610b83565b9350506060610efd88828901610b83565b9250506080610f0e88828901610e55565b9150509295509295909350565b6000610f2682610e6a565b9150610f3183610e6a565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610f7057610f6f610bf4565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610fad57610fac610bf4565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610fea57610fe9610bf4565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561102757611026610bf4565b5b82820290509291505056fea26469706673582212207faf3e086665addc82f6495f8f1ebd1cc80707c45a9bda26cf3031add12e008064736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 58,
        "contract": "contracts/Fundme.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 61,
        "contract": "contracts/Fundme.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 63,
        "contract": "contracts/Fundme.sol:FundMe",
        "label": "s_owner",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 66,
        "contract": "contracts/Fundme.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}